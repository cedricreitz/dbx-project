# This file defines dbt profiles for deployed dbt jobs.
default:
  target: dev # default target
  outputs:
    # Doing local development with the dbt CLI?
    # Then you should create your own profile in your .dbt/profiles.yml using 'dbt init'
    # (See README.md)

    # The default target when deployed with the Databricks CLI
    # N.B. when you use dbt from the command line, it uses the profile from .dbt/profiles.yml
    dev:
      type: databricks
      method: http
      catalog: dbt
      schema: source_1 #"{{ var('dev_schema') }}"

      # The workspace host / token are provided by Databricks
      # see databricks.yml for the workspace host used for 'dev'
      host: "{{ env_var('DBT_HOST') }}"
      http_path: /sql/1.0/warehouses/76d3865c7a1e5b77
      token: "{{ env_var('DBT_ACCESS_TOKEN') }}"

    # The test target when deployed with the Databricks CLI
    test:
      type: databricks
      method: http
      catalog: dbt
      schema: bronze

      # The workspace host / token are provided by Databricks
      # see databricks.yml for the workspace host used for 'prod'
      host: "{{ env_var('DBT_HOST') }}"
      http_path: /sql/1.0/warehouses/76d3865c7a1e5b77
      token: "{{ env_var('DBT_ACCESS_TOKEN') }}"

    # The production target when deployed with the Databricks CLI
    prod:
      type: databricks
      method: http
      catalog: dbt
      schema: bronze

      # The workspace host / token are provided by Databricks
      # see databricks.yml for the workspace host used for 'prod'
      host: "{{ env_var('DBT_HOST') }}"
      http_path: /sql/1.0/warehouses/76d3865c7a1e5b77
      token: "{{ env_var('DBT_ACCESS_TOKEN') }}"
